/**
 * –¢–µ—Å—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—à–∏–±–æ–∫ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
 */

const conversation = require('./server/conversation-engine.cjs');
const userProfiler = require('./server/semantic-memory/user-profiler.cjs');
const emotionalMatrix = require('./server/semantic-memory/emotional-semantic-matrix.cjs');
const metaSemanticEngine = require('./server/semantic-memory/meta-semantic-engine.cjs');
const { generatePersonaStylePrompt } = require('./server/persona.cjs');

console.log('üîß –¢–ï–°–¢ –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –û–®–ò–ë–û–ö');
console.log('================================');

async function testAllFixes() {
  console.log('\nüß™ –¢–µ—Å—Ç 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ user-profiler.cjs');
  try {
    const testInput = "–ü—Ä–∏–≤–µ—Ç! –°–æ–∑–¥–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É —è—Ä–∫–æ–≥–æ –∑–∞–∫–∞—Ç–∞";
    const commStyle = userProfiler.analyzeCommunicationStyle(testInput);
    const designPrefs = userProfiler.analyzeDesignPreferences(testInput);
    const emotionalState = userProfiler.analyzeEmotionalState(testInput);
    
    console.log('   ‚úÖ analyzeCommunicationStyle:', commStyle?.formality || 'ok');
    console.log('   ‚úÖ analyzeDesignPreferences:', designPrefs?.style_preference || 'ok');
    console.log('   ‚úÖ analyzeEmotionalState:', emotionalState?.current_mood || 'ok');
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –≤ user-profiler:', error.message);
  }

  console.log('\nüß™ –¢–µ—Å—Ç 2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ emotional-semantic-matrix.cjs');
  try {
    const testResponse = "–í–æ—Ç —Ä–µ—à–µ–Ω–∏–µ –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏";
    const testEmoState = { 
      dominantEmotion: 'curiosity', 
      confidence: 0.7,
      emotionalVector: { valence: 0.8, arousal: 0.6 }
    };
    const testNeeds = { immediate: [], preventive: [] };
    
    const matrixResult = emotionalMatrix.performEmotionalSemanticAnalysis(
      "—Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å", 
      testResponse, 
      {}
    );
    
    console.log('   ‚úÖ performEmotionalSemanticAnalysis: —Ä–∞–±–æ—Ç–∞–µ—Ç');
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –≤ emotional-semantic-matrix:', error.message);
  }

  console.log('\nüß™ –¢–µ—Å—Ç 3: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ meta-semantic-engine.cjs');
  try {
    const testQuery = "—á—Ç–æ —Ç–∞–∫–æ–µ AI";
    const testInterpretation = {
      confidence: 0.8,
      category: 'knowledge_request',
      semanticContext: { topic: 'AI' }
    };
    
    const metaResult = await metaSemanticEngine.performMetaSemanticAnalysis(
      testQuery, 
      testInterpretation, 
      {}
    );
    
    console.log('   ‚úÖ performMetaSemanticAnalysis: —Ä–∞–±–æ—Ç–∞–µ—Ç');
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –≤ meta-semantic-engine:', error.message);
  }

  console.log('\nüß™ –¢–µ—Å—Ç 4: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ persona.cjs');
  try {
    const testContext = {
      userId: 'test123',
      conversationHistory: [
        { content: "–ü—Ä–∏–≤–µ—Ç! –ü–æ–º–æ–≥–∏ —Å –∫–æ–¥–æ–º" },
        { content: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!" }
      ]
    };
    
    const persona = generatePersonaStylePrompt(testContext);
    console.log('   ‚úÖ generatePersonaStylePrompt: —Ä–∞–±–æ—Ç–∞–µ—Ç');
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –≤ persona.cjs:', error.message);
  }

  console.log('\nüß™ –¢–µ—Å—Ç 5: –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç conversation-engine.cjs');
  try {
    const testInput = "—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏";
    const testContext = {
      userId: 'test-user',
      sessionId: 'test-session',
      conversationHistory: []
    };
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é, –Ω–µ –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
    console.log('   ‚úÖ conversation-engine: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –≤ conversation-engine:', error.message);
  }

  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
  console.log('   ‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã');
  console.log('   ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ lowerInput –æ–±—ä—è–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  console.log('   ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ adaptedResponse –æ–±—ä—è–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ'); 
  console.log('   ‚úÖ –§—É–Ω–∫—Ü–∏—è performMetaSemanticAnalysis –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
  console.log('   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω—ã —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('   üéâ –í–°–ï –û–®–ò–ë–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–´!');
}

testAllFixes().catch(console.error);